{
    "name": "Parallel Data Processing Pipeline",
    "description": "Pipeline that processes data in parallel streams",
    "version": "1.0.0",
    "parameters": [
        {
            "name": "loaded_data",
            "schema": {"type": "array"},
            "required": true,
            "description": "Array of data items to process in parallel"
        }
    ],
    "steps": [
        {
            "id": "step1",
            "name": "Data Splitter",
            "step_class": "DataSplitterStep",
            "module": "tests.pipelines.parallel_pipeline.steps.data_splitter",
            "config": {
                "split_count": 3
            },
            "inputs": [
                {
                    "name": "loaded_data",
                    "source": "{parameters.loaded_data}",
                    "schema": {"type": "array"},
                    "required": true
                }
            ],
            "outputs": [
                {
                    "name": "data_chunks",
                    "schema": {"type": "array"},
                    "required": true
                },
                {
                    "name": "chunk_count",
                    "schema": {"type": "integer"},
                    "required": true
                },
                {
                    "name": "original_data_size",
                    "schema": {"type": "integer"},
                    "required": true
                }
            ]
        },
        {
            "id": "step2",
            "name": "Stream Processor 1",
            "step_class": "StreamProcessorStep",
            "module": "tests.pipelines.parallel_pipeline.steps.stream_processor",
            "config": {
                "stream_id": 1,
                "processing_type": "analytics"
            },
            "inputs": [
                {
                    "name": "data_chunks",
                    "source": "{steps.step1.output.data_chunks}",
                    "schema": {"type": "array"},
                    "required": true
                }
            ],
            "outputs": [
                {
                    "name": "processed_data",
                    "schema": {"type": "object"},
                    "required": true
                }
            ]
        },
        {
            "id": "step3",
            "name": "Stream Processor 2",
            "step_class": "StreamProcessorStep",
            "module": "tests.pipelines.parallel_pipeline.steps.stream_processor",
            "config": {
                "stream_id": 2,
                "processing_type": "analytics"
            },
            "inputs": [
                {
                    "name": "data_chunks",
                    "source": "{steps.step1.output.data_chunks}",
                    "schema": {"type": "array"},
                    "required": true
                }
            ],
            "outputs": [
                {
                    "name": "processed_data",
                    "schema": {"type": "object"},
                    "required": true
                }
            ]
        },
        {
            "id": "step4",
            "name": "Stream Processor 3",
            "step_class": "StreamProcessorStep",
            "module": "tests.pipelines.parallel_pipeline.steps.stream_processor",
            "config": {
                "stream_id": 3,
                "processing_type": "analytics"
            },
            "inputs": [
                {
                    "name": "data_chunks",
                    "source": "{steps.step1.output.data_chunks}",
                    "schema": {"type": "array"},
                    "required": true
                }
            ],
            "outputs": [
                {
                    "name": "processed_data",
                    "schema": {"type": "object"},
                    "required": true
                }
            ]
        },
        {
            "id": "step5",
            "name": "Results Merger",
            "step_class": "ResultsMergerStep",
            "module": "tests.pipelines.parallel_pipeline.steps.results_merger",
            "config": {},
            "inputs": [
                {
                    "name": "processed_data_1",
                    "source": "{steps.step2.output.processed_data}",
                    "schema": {"type": "object"},
                    "required": true
                },
                {
                    "name": "processed_data_2",
                    "source": "{steps.step3.output.processed_data}",
                    "schema": {"type": "object"},
                    "required": true
                },
                {
                    "name": "processed_data_3",
                    "source": "{steps.step4.output.processed_data}",
                    "schema": {"type": "object"},
                    "required": true
                }
            ],
            "outputs": [
                {
                    "name": "merged_results",
                    "schema": {"type": "object"},
                    "required": true
                }
            ]
        },
        {
            "id": "step6",
            "name": "Completed Stats Collector",
            "step_class": "CompletedStatsCollectorStep",
            "module": "tests.pipelines.parallel_pipeline.steps.completed_stats_collector",
            "config": {},
            "inputs": [
                {
                    "name": "merged_results",
                    "source": "{steps.step5.output.merged_results}",
                    "schema": {"type": "object"},
                    "required": true
                }
            ],
            "outputs": [
                {
                    "name": "statistics",
                    "schema": {"type": "object"},
                    "required": true
                }
            ]
        }
    ],
    "flow": {
        "start_at": "step1",
        "paths": [
            {
                "from": "step1",
                "to": "step2",
                "condition": {"type": "always"}
            },
            {
                "from": "step1",
                "to": "step3", 
                "condition": {"type": "always"}
            },
            {
                "from": "step1",
                "to": "step4",
                "condition": {"type": "always"}
            },
            {
                "from": "step2",
                "to": "step5",
                "condition": {"type": "always"}
            },
            {
                "from": "step3",
                "to": "step5",
                "condition": {"type": "always"}
            },
            {
                "from": "step4",
                "to": "step5",
                "condition": {"type": "always"}
            },
            {
                "from": "step5",
                "to": "step6",
                "condition": {"type": "always"}
            }
        ]
    }
}

{
    "name": "Conditional Processing Pipeline",
    "description": "Pipeline with conditional logic based on data quality",
    "version": "1.0.0",
    "parameters": [
        {
            "name": "threshold",
            "schema": {"type": "number"},
            "required": true
        },
        {
            "name": "test_data",
            "schema": {"type": "array"},
            "required": true
        }
    ],
    "steps": [
        {
            "id": "step1",
            "name": "Data Ingestor",
            "step_class": "DataIngestorStep",
            "module": "tests.pipelines.conditional_pipeline.steps.data_ingestor",
            "config": {},
            "inputs": [
                {
                    "name": "test_data",
                    "source": "{parameters.test_data}",
                    "required": true
                }
            ],
            "outputs": [
                {
                    "name": "ingested_data",
                    "required": true
                }
            ]
        },
        {
            "id": "step2",
            "name": "Quality Checker",
            "step_class": "QualityCheckerStep",
            "module": "tests.pipelines.conditional_pipeline.steps.quality_checker",
            "config": {},
            "inputs": [
                {
                    "name": "ingested_data",
                    "source": "{steps.step1.output.ingested_data}",
                    "required": true
                }
            ],
            "outputs": [
                {
                    "name": "quality_score",
                    "required": true
                },
                {
                    "name": "ingested_data",
                    "required": true
                }
            ]
        },
        {
            "id": "step3",
            "name": "High Quality Processing",
            "step_class": "HighQualityProcessorStep",
            "module": "tests.pipelines.conditional_pipeline.steps.high_quality_processor",
            "config": {
                "processing_level": "full"
            },
            "inputs": [
                {
                    "name": "ingested_data",
                    "source": "{steps.step2.output.ingested_data}",
                    "required": true
                },
                {
                    "name": "quality_score",
                    "source": "{steps.step2.output.quality_score}",
                    "required": true
                }
            ],
            "outputs": [
                {
                    "name": "processed_data",
                    "required": true
                },
                {
                    "name": "processing_level",
                    "required": true
                }
            ]
        },
        {
            "id": "step4",
            "name": "Low Quality Processing",
            "step_class": "LowQualityProcessorStep",
            "module": "tests.pipelines.conditional_pipeline.steps.low_quality_processor",
            "config": {
                "processing_level": "basic"
            },
            "inputs": [
                {
                    "name": "ingested_data",
                    "source": "{steps.step2.output.ingested_data}",
                    "required": true
                },
                {
                    "name": "quality_score",
                    "source": "{steps.step2.output.quality_score}",
                    "required": true
                }
            ],
            "outputs": [
                {
                    "name": "processed_data",
                    "required": true
                },
                {
                    "name": "processing_level",
                    "required": true
                }
            ]
        },
        {
            "id": "step5",
            "name": "Results Aggregator",
            "step_class": "ResultsAggregatorStep",
            "module": "tests.pipelines.conditional_pipeline.steps.results_aggregator",
            "config": {},
            "inputs": [
                {
                    "name": "processed_data",
                    "source": "{steps.step3.output.processed_data}|{steps.step4.output.processed_data}",
                    "required": true
                }
            ],
            "outputs": [
                {
                    "name": "aggregated_results",
                    "required": true
                }
            ]
        }
    ],
    "flow": {
        "start_at": "step1",
        "paths": [
            {
                "from_step": "step1",
                "to_step": "step2",
                "condition": {"type": "always"}
            },
            {
                "from_step": "step2",
                "to_step": "step3",
                "condition": {
                    "type": "threshold_condition",
                    "config": {
                        "field": "quality_score",
                        "operator": ">=",
                        "value": "{{ parameters.threshold }}"
                    }
                }
            },
            {
                "from_step": "step2",
                "to_step": "step4",
                "condition": {
                    "type": "threshold_condition", 
                    "config": {
                        "field": "quality_score",
                        "operator": "<",
                        "value": "{{ parameters.threshold }}"
                    }
                }
            },
            {
                "from_step": "step3",
                "to_step": "step5",
                "condition": {"type": "always"}
            },
            {
                "from_step": "step4", 
                "to_step": "step5",
                "condition": {"type": "always"}
            }
        ]
    }
}
